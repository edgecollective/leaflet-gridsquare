/*! react-grid-system v0.2.0 | (c) 2018 Trend Micro Inc. | MIT | https://github.com/trendmicro-frontend/react-grid-system */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
// Aspects of the grid system
//
// Bootstrap v3
// ------------------------------------------------------------------------------------------------
//                     |  Extra small            | Small    | Medium   | Large
//                     |  <768px                 | ≥768px   | ≥992px   | ≥1200px
// ------------------- | ----------------------- | ------------------------------------------------
// Grid behavior       | Horizontal at all times | Collapsed to start, horizontal above breakpoints
// ------------------- | ----------------------- | ------------------------------------------------
// Max container width | None (auto)             | 750px    | 970px    | 1170px
// ------------------- | --------------------------------------------------------------------------
// Gutter width        | 30px (15px on each side of a column)
// ------------------------------------------------------------------------------------------------
//
// Bootstrap v4
// ------------------------------------------------------------------------------------------------
//                     |  Extra small            | Small    | Medium   | Large    | Extra large
//                     |  <576px                 | ≥576px   | ≥768px   | ≥992px   | ≥1200px
// ------------------- | ----------------------- | ------------------------------------------------
// Grid behavior       | Horizontal at all times | Collapsed to start, horizontal above breakpoints
// ------------------- | ----------------------- | ------------------------------------------------
// Max container width | None (auto)             | 540px    | 720px    | 960px    | 1140px
// ------------------- | --------------------------------------------------------------------------
// Gutter width        | 30px (15px on each side of a column)
// ------------------------------------------------------------------------------------------------
//

var LAYOUT_FLEXBOX = exports.LAYOUT_FLEXBOX = 'flexbox';
var LAYOUT_FLOATS = exports.LAYOUT_FLOATS = 'floats';
var LAYOUTS = exports.LAYOUTS = [LAYOUT_FLEXBOX, LAYOUT_FLOATS];

var SCREEN_CLASSES = exports.SCREEN_CLASSES = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];

// The default breakpoints (minimum width) of devices in screen class sm, md, lg, xl, and xxl.
var DEFAULT_BREAKPOINTS = exports.DEFAULT_BREAKPOINTS = [576, 768, 992, 1200, 0];

// The default container widths in pixels of devices in screen class sm, md, lg, xl, and xxl.
var DEFAULT_CONTAINER_WIDTHS = exports.DEFAULT_CONTAINER_WIDTHS = [540, 720, 960, 1140, 0];

// The default number of columns.
var DEFAULT_COLUMNS = exports.DEFAULT_COLUMNS = 12;

// The default horizontal padding (called gutter) between two columns. A gutter width of 30 means 15px on each side of a column.
var DEFAULT_GUTTER_WIDTH = exports.DEFAULT_GUTTER_WIDTH = 30;

// The default grid system layout.
var DEFAULT_LAYOUT = exports.DEFAULT_LAYOUT = LAYOUT_FLOATS;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("lodash.throttle");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getScreenClass = exports.getViewportWidth = undefined;

var _ensureArray = __webpack_require__(7);

var _ensureArray2 = _interopRequireDefault(_ensureArray);

var _constants = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getViewportWidth = exports.getViewportWidth = function getViewportWidth() {
    if (typeof window !== 'undefined' && window.innerWidth) {
        return window.innerWidth;
    }
    return null;
};

var getScreenClass = exports.getScreenClass = function getScreenClass(_ref) {
    var breakpoints = _ref.breakpoints;

    breakpoints = (0, _ensureArray2.default)(breakpoints);
    if (breakpoints.length === 0) {
        breakpoints = _constants.DEFAULT_BREAKPOINTS;
    }

    var screenClass = 'xs';

    var viewportWidth = getViewportWidth();

    if (breakpoints[0] && viewportWidth >= breakpoints[0] && breakpoints[0] > 0) {
        screenClass = 'sm';
    }
    if (breakpoints[1] && viewportWidth >= breakpoints[1] && breakpoints[1] > 0) {
        screenClass = 'md';
    }
    if (breakpoints[2] && viewportWidth >= breakpoints[2] && breakpoints[2] > 0) {
        screenClass = 'lg';
    }
    if (breakpoints[3] && viewportWidth >= breakpoints[3] && breakpoints[3] > 0) {
        screenClass = 'xl';
    }
    if (breakpoints[4] && viewportWidth >= breakpoints[4] && breakpoints[4] > 0) {
        screenClass = 'xxl';
    }

    return screenClass;
};

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("classnames");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"floats-container":"grid-system---floats-container---ucGke","floatsContainer":"grid-system---floats-container---ucGke","flexbox-container":"grid-system---flexbox-container---3Fao-","flexboxContainer":"grid-system---flexbox-container---3Fao-","floats-row":"grid-system---floats-row---3L-46","floatsRow":"grid-system---floats-row---3L-46","flexbox-row":"grid-system---flexbox-row---38uB8","flexboxRow":"grid-system---flexbox-row---38uB8","floats-col":"grid-system---floats-col---LUxzY","floatsCol":"grid-system---floats-col---LUxzY","flexbox-col":"grid-system---flexbox-col---lXegW","flexboxCol":"grid-system---flexbox-col---lXegW"};

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("ensure-array");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hidden = exports.Visible = exports.Col = exports.Row = exports.Container = exports.Provider = undefined;

var _Provider2 = __webpack_require__(9);

var _Provider3 = _interopRequireDefault(_Provider2);

var _Container2 = __webpack_require__(10);

var _Container3 = _interopRequireDefault(_Container2);

var _Row2 = __webpack_require__(11);

var _Row3 = _interopRequireDefault(_Row2);

var _Col2 = __webpack_require__(12);

var _Col3 = _interopRequireDefault(_Col2);

var _Visible2 = __webpack_require__(13);

var _Visible3 = _interopRequireDefault(_Visible2);

var _Hidden2 = __webpack_require__(14);

var _Hidden3 = _interopRequireDefault(_Hidden2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Provider = _Provider3.default;
exports.Container = _Container3.default;
exports.Row = _Row3.default;
exports.Col = _Col3.default;
exports.Visible = _Visible3.default;
exports.Hidden = _Hidden3.default;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _constants = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Provider = (_temp2 = _class = function (_React$Component) {
    _inherits(Provider, _React$Component);

    function Provider() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Provider);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Provider.__proto__ || Object.getPrototypeOf(Provider)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
            return {
                breakpoints: _this.props.breakpoints,
                containerWidths: _this.props.containerWidths,
                columns: _this.props.columns,
                gutterWidth: _this.props.gutterWidth,
                layout: _this.props.layout
            };
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Provider, [{
        key: 'render',
        value: function render() {
            return this.props.children;
        }
    }]);

    return Provider;
}(_react2.default.Component), _class.propTypes = {
    // The breakpoints (minimum width) of devices in screen class sm, md, lg, xl, and xxl.
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number),

    // The container widths in pixels of devices in screen class sm, md, lg, xl, and xxl.
    containerWidths: _propTypes2.default.arrayOf(_propTypes2.default.number),

    // The number of columns. Defaults to 12.
    columns: _propTypes2.default.number,

    // The horizontal padding (called gutter) between two columns. A gutter width of 30 means 15px on each side of a column.
    gutterWidth: _propTypes2.default.number,

    // The grid system layout. One of: 'floats', 'flexbox'
    layout: _propTypes2.default.oneOf(['floats', 'flexbox'])
}, _class.defaultProps = {
    breakpoints: _constants.DEFAULT_BREAKPOINTS,
    containerWidths: _constants.DEFAULT_CONTAINER_WIDTHS,
    columns: _constants.DEFAULT_COLUMNS,
    gutterWidth: _constants.DEFAULT_GUTTER_WIDTH,
    layout: 'floats'
}, _class.childContextTypes = {
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number),
    containerWidths: _propTypes2.default.arrayOf(_propTypes2.default.number),
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(['floats', 'flexbox'])
}, _temp2);
exports.default = Provider;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _classnames = __webpack_require__(5);

var _classnames2 = _interopRequireDefault(_classnames);

var _ensureArray = __webpack_require__(7);

var _ensureArray2 = _interopRequireDefault(_ensureArray);

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _lodash = __webpack_require__(3);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = __webpack_require__(4);

var _constants = __webpack_require__(2);

var _index = __webpack_require__(6);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = (_temp2 = _class = function (_PureComponent) {
    _inherits(Container, _PureComponent);

    function Container() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Container);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Container.__proto__ || Object.getPrototypeOf(Container)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
            return {
                columns: _this.columns,
                gutterWidth: _this.gutterWidth,
                layout: _this.layout
            };
        }, _this.setScreenClass = function () {
            var screenClass = (0, _utils.getScreenClass)({ breakpoints: _this.context.breakpoints });

            _this.setState({ screenClass: screenClass }, function () {
                if (typeof _this.props.onResize === 'function') {
                    _this.props.onResize({ screenClass: screenClass });
                }
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Container, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setScreenClass();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.eventListener = (0, _lodash2.default)(this.setScreenClass, Math.floor(1000 / 60)); // 60Hz
            window.addEventListener('resize', this.eventListener);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.eventListener) {
                this.eventListener.cancel();
                window.removeEventListener('resize', this.eventListener);
                this.eventListener = null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _cx;

            var _props = this.props,
                fluid = _props.fluid,
                xs = _props.xs,
                sm = _props.sm,
                md = _props.md,
                lg = _props.lg,
                xl = _props.xl,
                xxl = _props.xxl,
                gutterWidth = _props.gutterWidth,
                layout = _props.layout,
                onResize = _props.onResize,
                className = _props.className,
                style = _props.style,
                children = _props.children,
                props = _objectWithoutProperties(_props, ['fluid', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'gutterWidth', 'layout', 'onResize', 'className', 'style', 'children']);

            return _react2.default.createElement(
                'div',
                _extends({}, props, {
                    className: (0, _classnames2.default)(className, (_cx = {}, _defineProperty(_cx, _index2.default.flexboxContainer, this.layout === _constants.LAYOUT_FLEXBOX), _defineProperty(_cx, _index2.default.floatsContainer, this.layout === _constants.LAYOUT_FLOATS), _cx)),
                    style: _extends({}, this.style, style)
                }),
                children
            );
        }
    }, {
        key: 'columns',
        get: function get() {
            if (this.props.columns > 0) {
                return this.props.columns;
            }
            if (this.context.columns > 0) {
                return this.context.columns;
            }
            return _constants.DEFAULT_COLUMNS;
        }
    }, {
        key: 'gutterWidth',
        get: function get() {
            if (this.props.gutterWidth >= 0) {
                return this.props.gutterWidth;
            }
            if (this.context.gutterWidth >= 0) {
                return this.context.gutterWidth;
            }
            return _constants.DEFAULT_GUTTER_WIDTH;
        }
    }, {
        key: 'layout',
        get: function get() {
            var layout = this.props.layout || this.context.layout;
            return _constants.LAYOUTS.indexOf(layout) >= 0 ? layout : _constants.DEFAULT_LAYOUT;
        }
    }, {
        key: 'style',
        get: function get() {
            var gutterWidth = this.gutterWidth;
            var style = {
                paddingLeft: gutterWidth / 2,
                paddingRight: gutterWidth / 2
            };

            var _props2 = this.props,
                fluid = _props2.fluid,
                xs = _props2.xs,
                sm = _props2.sm,
                md = _props2.md,
                lg = _props2.lg,
                xl = _props2.xl,
                xxl = _props2.xxl;

            if (fluid && !sm && !md && !lg && !xl && !xxl) {
                return style;
            }

            var screenClass = this.state.screenClass;

            var containerWidths = (0, _ensureArray2.default)(this.context.containerWidths).length > 0 ? (0, _ensureArray2.default)(this.context.containerWidths) : _constants.DEFAULT_CONTAINER_WIDTHS;

            if (screenClass === 'sm' && containerWidths[0] > 0 && !sm && !xs) {
                style.maxWidth = containerWidths[0] + 'px';
            }
            if (screenClass === 'md' && containerWidths[1] > 0 && !md) {
                style.maxWidth = containerWidths[1] + 'px';
            }
            if (screenClass === 'lg' && containerWidths[2] > 0 && !lg) {
                style.maxWidth = containerWidths[2] + 'px';
            }
            if (screenClass === 'xl' && containerWidths[3] > 0 && !xl) {
                style.maxWidth = containerWidths[3] + 'px';
            }
            if (screenClass === 'xxl' && containerWidths[4] > 0 && !xxl) {
                style.maxWidth = containerWidths[4] + 'px';
            }

            return style;
        }
    }]);

    return Container;
}(_react.PureComponent), _class.propTypes = {
    // True makes the container full-width, false fixed-width.
    fluid: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in xs, not present means fluid everywhere.
    xs: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in sm, not present means fluid everywhere.
    sm: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in md, not present means fluid everywhere.
    md: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in lg, not present means fluid everywhere.
    lg: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in xl, not present means fluid everywhere.
    xl: _propTypes2.default.bool,

    // This is in combination with fluid enabled.
    // True makes container fluid only in xxl, not present means fluid everywhere.
    xxl: _propTypes2.default.bool,

    // The number of columns.
    columns: _propTypes2.default.number,

    // The horizontal padding (called gutter) between two columns.
    gutterWidth: _propTypes2.default.number,

    // The grid system layout.
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS),

    // A callback fired when the resize event occurs.
    onResize: _propTypes2.default.func
}, _class.defaultProps = {
    fluid: false,
    xs: false,
    sm: false,
    md: false,
    lg: false,
    xl: false,
    xxl: false
}, _class.contextTypes = {
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number),
    containerWidths: _propTypes2.default.arrayOf(_propTypes2.default.number),
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _class.childContextTypes = {
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _temp2);
exports.default = Container;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _classnames = __webpack_require__(5);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _constants = __webpack_require__(2);

var _index = __webpack_require__(6);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Row = (_temp2 = _class = function (_PureComponent) {
    _inherits(Row, _PureComponent);

    function Row() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Row);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Row.__proto__ || Object.getPrototypeOf(Row)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
            return {
                columns: _this.columns,
                gutterWidth: _this.gutterWidth,
                layout: _this.layout
            };
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Row, [{
        key: 'render',
        value: function render() {
            var _cx;

            var _props = this.props,
                gutterWidth = _props.gutterWidth,
                layout = _props.layout,
                className = _props.className,
                style = _props.style,
                children = _props.children,
                props = _objectWithoutProperties(_props, ['gutterWidth', 'layout', 'className', 'style', 'children']);

            return _react2.default.createElement(
                'div',
                _extends({}, props, {
                    className: (0, _classnames2.default)(className, (_cx = {}, _defineProperty(_cx, _index2.default.flexboxRow, this.layout === _constants.LAYOUT_FLEXBOX), _defineProperty(_cx, _index2.default.floatsRow, this.layout === _constants.LAYOUT_FLOATS), _cx)),
                    style: _extends({}, this.style, style)
                }),
                children
            );
        }
    }, {
        key: 'columns',
        get: function get() {
            if (this.props.columns > 0) {
                return this.props.columns;
            }
            if (this.context.columns > 0) {
                return this.context.columns;
            }
            return _constants.DEFAULT_COLUMNS;
        }
    }, {
        key: 'gutterWidth',
        get: function get() {
            if (this.props.gutterWidth >= 0) {
                return this.props.gutterWidth;
            }
            if (this.context.gutterWidth >= 0) {
                return this.context.gutterWidth;
            }
            return _constants.DEFAULT_GUTTER_WIDTH;
        }
    }, {
        key: 'layout',
        get: function get() {
            var layout = this.props.layout || this.context.layout;
            return _constants.LAYOUTS.indexOf(layout) >= 0 ? layout : _constants.DEFAULT_LAYOUT;
        }
    }, {
        key: 'style',
        get: function get() {
            var gutterWidth = this.gutterWidth;
            var style = {
                marginLeft: -(gutterWidth / 2),
                marginRight: -(gutterWidth / 2)
            };

            return style;
        }
    }]);

    return Row;
}(_react.PureComponent), _class.propTypes = {
    // The number of columns.
    columns: _propTypes2.default.number,

    // The horizontal padding (called gutter) between two columns.
    gutterWidth: _propTypes2.default.number,

    // The grid system layout.
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _class.contextTypes = {
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _class.childContextTypes = {
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _temp2);
exports.default = Row;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _classnames = __webpack_require__(5);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _lodash = __webpack_require__(3);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = __webpack_require__(4);

var _constants = __webpack_require__(2);

var _index = __webpack_require__(6);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var flexboxAutoprefixer = function flexboxAutoprefixer(style) {
    return Object.keys(style).reduce(function (obj, key) {
        var val = style[key];

        if (key === 'flex') {
            // flex: 1 0 50%;
            style.WebkitBoxFlex = parseInt(val, 10); // -webkit-box-flex
            style.WebkitFlex = val; // -webkit-flex
            style.msFlex = val; // -ms-flex
        } else if (key === 'flexBasis') {
            style.WebkitFlexBasis = val; // -webkit-flex-basis;
            style.msFlexPreferredSize = val; // -ms-flex-preferred-size
        } else if (key === 'flexGrow') {
            style.WebkitBoxFlex = val; // -webkit-box-flex
            style.WebkitFlexGrow = val; // -webkit-flex-grow
            style.msFlexPositive = val; // -ms-flex-positive
        }if (key === 'flexShrink') {
            obj.WebkitFlexShrink = val; // -webkit-flex-shrink
            obj.msFlexNegative = val; // -ms-flex-negative
        }

        obj[key] = val;

        return obj;
    }, {});
};

var getWidth = function getWidth(width) {
    var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.DEFAULT_COLUMNS;

    if (width === 'auto') {
        return width;
    }

    width = parseInt(width, 10);

    if (Number.isNaN(width)) {
        return undefined;
    }

    columns = Math.floor(columns);
    if (columns <= 0) {
        columns = _constants.DEFAULT_COLUMNS;
    }

    var colWidth = Math.max(0, Math.min(columns, width));
    if (colWidth === columns) {
        return '100%';
    }
    return (100 / columns * colWidth).toFixed(8) * 1 + '%';
};

var Col = (_temp2 = _class = function (_PureComponent) {
    _inherits(Col, _PureComponent);

    function Col() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Col);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Col.__proto__ || Object.getPrototypeOf(Col)).call.apply(_ref, [this].concat(args))), _this), _this.setScreenClass = function () {
            _this.setState(function (state) {
                return {
                    screenClass: (0, _utils.getScreenClass)({ breakpoints: _this.context.breakpoints })
                };
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Col, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setScreenClass();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.eventListener = (0, _lodash2.default)(this.setScreenClass, Math.floor(1000 / 60)); // 60Hz
            window.addEventListener('resize', this.eventListener);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.eventListener) {
                this.eventListener.cancel();
                window.removeEventListener('resize', this.eventListener);
                this.eventListener = null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _cx;

            var _props = this.props,
                width = _props.width,
                xs = _props.xs,
                sm = _props.sm,
                md = _props.md,
                lg = _props.lg,
                xl = _props.xl,
                xxl = _props.xxl,
                offset = _props.offset,
                pull = _props.pull,
                push = _props.push,
                className = _props.className,
                style = _props.style,
                children = _props.children,
                props = _objectWithoutProperties(_props, ['width', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'offset', 'pull', 'push', 'className', 'style', 'children']);

            return _react2.default.createElement(
                'div',
                _extends({}, props, {
                    className: (0, _classnames2.default)(className, (_cx = {}, _defineProperty(_cx, _index2.default.flexboxCol, this.layout === _constants.LAYOUT_FLEXBOX), _defineProperty(_cx, _index2.default.floatsCol, this.layout === _constants.LAYOUT_FLOATS), _cx)),
                    style: _extends({}, this.style, style)
                }),
                children
            );
        }
    }, {
        key: 'columns',
        get: function get() {
            if (this.context.columns > 0) {
                return this.context.columns;
            }
            return _constants.DEFAULT_COLUMNS;
        }
    }, {
        key: 'gutterWidth',
        get: function get() {
            if (this.context.gutterWidth >= 0) {
                return this.context.gutterWidth;
            }
            return _constants.DEFAULT_GUTTER_WIDTH;
        }
    }, {
        key: 'layout',
        get: function get() {
            var layout = this.context.layout;
            return _constants.LAYOUTS.indexOf(layout) >= 0 ? layout : _constants.DEFAULT_LAYOUT;
        }
    }, {
        key: 'floatsStyle',
        get: function get() {
            var columns = this.columns;
            var gutterWidth = this.gutterWidth;
            var style = {
                paddingLeft: gutterWidth / 2,
                paddingRight: gutterWidth / 2
            };

            if (this.props.width) {
                style.width = getWidth(this.props.width, columns) || style.width;
            }

            var width = {
                xs: this.props.xs,
                sm: this.props.sm,
                md: this.props.md,
                lg: this.props.lg,
                xl: this.props.xl,
                xxl: this.props.xxl
            };
            var _props2 = this.props,
                offset = _props2.offset,
                push = _props2.push,
                pull = _props2.pull;
            var screenClass = this.state.screenClass;

            var screenClasses = _constants.SCREEN_CLASSES;
            screenClasses.forEach(function (size, index) {
                if (screenClasses.indexOf(screenClass) < index) {
                    return;
                }

                style.width = getWidth(width[size], columns) || style.width;
                style.marginLeft = getWidth(offset[size], columns) || style.marginLeft;
                style.left = getWidth(push[size], columns) || style.left;
                style.right = getWidth(pull[size], columns) || style.right;
            });

            return style;
        }
    }, {
        key: 'flexboxStyle',
        get: function get() {
            var columns = this.columns;
            var gutterWidth = this.gutterWidth;
            var style = {
                paddingLeft: gutterWidth / 2,
                paddingRight: gutterWidth / 2,
                flexShrink: 0
            };

            // <Col width={6}>col</Col>
            if (this.props.width) {
                if (this.props.width === 'auto') {
                    style.flexBasis = 'auto';
                    style.flexGrow = 0;
                    style.width = 'auto';
                    style.maxWidth = 'none';
                } else {
                    style.flexBasis = getWidth(this.props.width, columns) || style.flexBasis;
                    style.maxWidth = getWidth(this.props.width, columns) || style.maxWidth;
                }
            }

            var width = {
                xs: this.props.xs,
                sm: this.props.sm,
                md: this.props.md,
                lg: this.props.lg,
                xl: this.props.xl,
                xxl: this.props.xxl
            };
            var _props3 = this.props,
                offset = _props3.offset,
                push = _props3.push,
                pull = _props3.pull;
            var screenClass = this.state.screenClass;

            var screenClasses = _constants.SCREEN_CLASSES;
            screenClasses.forEach(function (size, index) {
                if (screenClasses.indexOf(screenClass) < index) {
                    return;
                }

                if (width[size] === true) {
                    // <Col sm>col</Col>
                    style.flexBasis = 0;
                    style.flexGrow = 1;
                } else if (width[size] === 'auto') {
                    style.flexBasis = 'auto';
                    style.flexGrow = 0;
                    style.width = 'auto';
                } else {
                    style.flexBasis = getWidth(width[size], columns) || style.flexBasis;
                    style.maxWidth = getWidth(width[size], columns) || style.maxWidth;
                }
                style.marginLeft = getWidth(offset[size], columns) || style.marginLeft;
                style.left = getWidth(push[size], columns) || style.left;
                style.right = getWidth(pull[size], columns) || style.right;
            });

            var hasWidth = !!getWidth(this.props.width) || Object.keys(width).reduce(function (acc, cur) {
                return acc || width[cur];
            }, false);
            if (!hasWidth) {
                style.flexBasis = 0;
                style.flexGrow = 1;
                style.maxWidth = '100%';
            }

            return flexboxAutoprefixer(style);
        }
    }, {
        key: 'style',
        get: function get() {
            var layout = this.layout;
            if (layout === _constants.LAYOUT_FLOATS) {
                return this.floatsStyle;
            }
            if (layout === _constants.LAYOUT_FLEXBOX) {
                return this.flexboxStyle;
            }
            return this.floatsStyle;
        }
    }]);

    return Col;
}(_react.PureComponent), _class.propTypes = {
    // The width of the column for all screen classes.
    width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `xs`.
    xs: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `sm`.
    sm: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `md`.
    md: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `lg`.
    lg: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `xl`.
    xl: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The width of the column for screen class `xxl`.
    xxl: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

    // The offset of this column for all screen classes.
    offset: _propTypes2.default.shape({
        xs: _propTypes2.default.number,
        sm: _propTypes2.default.number,
        md: _propTypes2.default.number,
        lg: _propTypes2.default.number,
        xl: _propTypes2.default.number,
        xxl: _propTypes2.default.number
    }),

    // The amount this column is pulled to the left for all screen classes.
    pull: _propTypes2.default.shape({
        xs: _propTypes2.default.number,
        sm: _propTypes2.default.number,
        md: _propTypes2.default.number,
        lg: _propTypes2.default.number,
        xl: _propTypes2.default.number,
        xxl: _propTypes2.default.number
    }),

    // The amount this column is pushed to the right for all screen classes.
    push: _propTypes2.default.shape({
        xs: _propTypes2.default.number,
        sm: _propTypes2.default.number,
        md: _propTypes2.default.number,
        lg: _propTypes2.default.number,
        xl: _propTypes2.default.number,
        xxl: _propTypes2.default.number
    })
}, _class.defaultProps = {
    offset: {},
    push: {},
    pull: {}
}, _class.contextTypes = {
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number),
    columns: _propTypes2.default.number,
    gutterWidth: _propTypes2.default.number,
    layout: _propTypes2.default.oneOf(_constants.LAYOUTS)
}, _temp2);
exports.default = Col;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _lodash = __webpack_require__(3);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var visible = function visible(screenClass, _ref) {
    var xs = _ref.xs,
        sm = _ref.sm,
        md = _ref.md,
        lg = _ref.lg,
        xl = _ref.xl,
        xxl = _ref.xxl;

    if (screenClass === 'xxl') {
        return !!xxl;
    }
    if (screenClass === 'xl') {
        return !!xl;
    }
    if (screenClass === 'lg') {
        return !!lg;
    }
    if (screenClass === 'md') {
        return !!md;
    }
    if (screenClass === 'sm') {
        return !!sm;
    }
    if (screenClass === 'xs') {
        return !!xs;
    }
    return true; // Defaults to true
};

var Visible = (_temp2 = _class = function (_PureComponent) {
    _inherits(Visible, _PureComponent);

    function Visible() {
        var _ref2;

        var _temp, _this, _ret;

        _classCallCheck(this, Visible);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Visible.__proto__ || Object.getPrototypeOf(Visible)).call.apply(_ref2, [this].concat(args))), _this), _this.setScreenClass = function () {
            var screenClass = (0, _utils.getScreenClass)({ breakpoints: _this.context.breakpoints });

            _this.setState({ screenClass: screenClass }, function () {
                if (typeof _this.props.onResize === 'function') {
                    _this.props.onResize({ screenClass: screenClass });
                }
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Visible, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setScreenClass();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.eventListener = (0, _lodash2.default)(this.setScreenClass, Math.floor(1000 / 60)); // 60Hz
            window.addEventListener('resize', this.eventListener);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.eventListener) {
                this.eventListener.cancel();
                window.removeEventListener('resize', this.eventListener);
                this.eventListener = null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                xs = _props.xs,
                sm = _props.sm,
                md = _props.md,
                lg = _props.lg,
                xl = _props.xl,
                xxl = _props.xxl,
                onResize = _props.onResize;


            if (visible(this.state.screenClass, { xs: xs, sm: sm, md: md, lg: lg, xl: xl, xxl: xxl })) {
                return this.props.children;
            }

            return null;
        }
    }]);

    return Visible;
}(_react.PureComponent), _class.propTypes = {
    // Visible on extra small devices.
    xs: _propTypes2.default.bool,

    // Visible on small devices.
    sm: _propTypes2.default.bool,

    // Visible on medimum devices.
    md: _propTypes2.default.bool,

    // Visible on large devices.
    lg: _propTypes2.default.bool,

    // Visible on extra large devices.
    xl: _propTypes2.default.bool,

    // Visible on double extra large devices.
    xxl: _propTypes2.default.bool,

    // A callback fired when the resize event occurs.
    onResize: _propTypes2.default.func
}, _class.defaultProps = {
    xs: false,
    sm: false,
    md: false,
    lg: false,
    xl: false,
    xxl: false
}, _class.contextTypes = {
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number)
}, _temp2);
exports.default = Visible;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _propTypes = __webpack_require__(0);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(1);

var _lodash = __webpack_require__(3);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var hidden = function hidden(screenClass, _ref) {
    var xs = _ref.xs,
        sm = _ref.sm,
        md = _ref.md,
        lg = _ref.lg,
        xl = _ref.xl,
        xxl = _ref.xxl;

    if (screenClass === 'xxl') {
        return !!xxl;
    }
    if (screenClass === 'xl') {
        return !!xl;
    }
    if (screenClass === 'lg') {
        return !!lg;
    }
    if (screenClass === 'md') {
        return !!md;
    }
    if (screenClass === 'sm') {
        return !!sm;
    }
    if (screenClass === 'xs') {
        return !!xs;
    }
    return true; // Defaults to true
};

var Hidden = (_temp2 = _class = function (_PureComponent) {
    _inherits(Hidden, _PureComponent);

    function Hidden() {
        var _ref2;

        var _temp, _this, _ret;

        _classCallCheck(this, Hidden);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Hidden.__proto__ || Object.getPrototypeOf(Hidden)).call.apply(_ref2, [this].concat(args))), _this), _this.setScreenClass = function () {
            var screenClass = (0, _utils.getScreenClass)({ breakpoints: _this.context.breakpoints });

            _this.setState({ screenClass: screenClass }, function () {
                if (typeof _this.props.onResize === 'function') {
                    _this.props.onResize({ screenClass: screenClass });
                }
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Hidden, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setScreenClass();
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.eventListener = (0, _lodash2.default)(this.setScreenClass, Math.floor(1000 / 60)); // 60Hz
            window.addEventListener('resize', this.eventListener);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.eventListener) {
                this.eventListener.cancel();
                window.removeEventListener('resize', this.eventListener);
                this.eventListener = null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                xs = _props.xs,
                sm = _props.sm,
                md = _props.md,
                lg = _props.lg,
                xl = _props.xl,
                xxl = _props.xxl,
                onResize = _props.onResize;


            if (hidden(this.state.screenClass, { xs: xs, sm: sm, md: md, lg: lg, xl: xl, xxl: xxl })) {
                return null;
            }

            return this.props.children;
        }
    }]);

    return Hidden;
}(_react.PureComponent), _class.propTypes = {
    // Hidden on extra small devices.
    xs: _propTypes2.default.bool,

    // Hidden on small devices.
    sm: _propTypes2.default.bool,

    // Hidden on medium devices.
    md: _propTypes2.default.bool,

    // Hidden on large devices.
    lg: _propTypes2.default.bool,

    // Hidden on extra large devices.
    xl: _propTypes2.default.bool,

    // Hidden on double extra large devices.
    xxl: _propTypes2.default.bool,

    // A callback fired when the resize event occurs.
    onResize: _propTypes2.default.func
}, _class.defaultProps = {
    xs: false,
    sm: false,
    md: false,
    lg: false,
    xl: false,
    xxl: false
}, _class.contextTypes = {
    breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.number)
}, _temp2);
exports.default = Hidden;

/***/ })
/******/ ]);
//# sourceMappingURL=index.js.map