"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _includes2 = _interopRequireDefault(require("lodash/includes"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _has2 = _interopRequireDefault(require("lodash/has"));

var _ensureArray11 = _interopRequireDefault(require("ensure-array"));

var _ensureType = require("../../lib/ensure-type");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var floatPointNumber = '[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)';
var pattern = new RegExp("[a-zA-Z]+(:".concat(floatPointNumber, "(,").concat(floatPointNumber, "){0,5})?"), 'g');

var SmoothieLineParserResultStatus = /*#__PURE__*/function () {
  function SmoothieLineParserResultStatus() {
    _classCallCheck(this, SmoothieLineParserResultStatus);
  }

  _createClass(SmoothieLineParserResultStatus, null, [{
    key: "parse",
    value: // Old status format
    //   <Idle,MPos:5.5290,0.5600,7.0000,0.0000,0.0000,0.0000,WPos:1.5290,-5.4400,0.0000>
    //
    // New status format
    //   <Home|MPos:x,y,z,a,b,c|WPos:x,y,z|F:current_feedrate,requested_feedrate,override|L:lp|S:sr|T:current_temperature,target_temperature>
    //   <Run|MPos:x,y,z,a,b,c|WPos:x,y,z|F:current_feedrate,requested_feedrate,override|L:lp|S:sr|T:current_temperature,target_temperature>
    //   <Alarm|MPos:x,y,z,a,b,c|WPos:x,y,z|F:requested_feedrate,override|T:current_temperature,target_temperature>
    //   <Hold|MPos:x,y,z,a,b,c|WPos:x,y,z|F:requested_feedrate,override|T:current_temperature,target_temperature>
    //   <Idle|MPos:x,y,z,a,b,c|WPos:x,y,z|F:requested_feedrate,override|T:current_temperature,target_temperature>
    function parse(line) {
      var r = line.match(/^<(.+)>$/);

      if (!r) {
        return null;
      }

      var payload = {};
      var params = r[1].match(pattern);
      var result = {};
      {
        // Supported states: Alarm, Home, Hold, Idle, Run
        var states = (params.shift() || '').split(':');
        payload.activeState = states[0] || '';
      }

      var _iterator = _createForOfIteratorHelper(params),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var param = _step.value;
          var nv = param.match(/^(.+):(.+)/);

          if (nv) {
            var type = nv[1];
            var value = nv[2].split(',');
            result[type] = value;
          }
        } // machine position - reported in current units

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if ((0, _has2["default"])(result, 'MPos')) {
        var axes = ['x', 'y', 'z', 'a', 'b', 'c'];
        var mPos = (0, _get2["default"])(result, 'MPos', ['0.000', '0.000', '0.000']); // Defaults to [x, y, z]

        payload.mpos = {};

        for (var i = 0; i < mPos.length; ++i) {
          payload.mpos[axes[i]] = mPos[i];
        }
      } // work position - reported in current units


      if ((0, _has2["default"])(result, 'WPos')) {
        var _axes = ['x', 'y', 'z', 'a', 'b', 'c'];
        var wPos = (0, _get2["default"])(result, 'WPos', ['0.000', '0.000', '0.000']); // Defaults to [x, y, z]

        payload.wpos = {};

        for (var _i = 0; _i < wPos.length; ++_i) {
          payload.wpos[_axes[_i]] = wPos[_i];
        }
      } // feedrate


      if ((0, _has2["default"])(result, 'F')) {
        if ((0, _includes2["default"])(['Home', 'Run'], payload.activeState)) {
          // F:current_feedrate,requested_feedrate,override
          var _ensureArray = (0, _ensureArray11["default"])(result.F),
              _ensureArray2 = _slicedToArray(_ensureArray, 3),
              currentFeedrate = _ensureArray2[0],
              feedrate = _ensureArray2[1],
              feedrateOverride = _ensureArray2[2];

          payload.currentFeedrate = (0, _ensureType.ensureNumber)(currentFeedrate) || 0;
          payload.feedrate = (0, _ensureType.ensureNumber)(feedrate) || 0;
          payload.feedrateOverride = (0, _ensureType.ensureNumber)(feedrateOverride) || 0;
        } else {
          // F:requested_feedrate,override
          var _ensureArray3 = (0, _ensureArray11["default"])(result.F),
              _ensureArray4 = _slicedToArray(_ensureArray3, 2),
              _feedrate = _ensureArray4[0],
              _feedrateOverride = _ensureArray4[1];

          payload.feedrate = (0, _ensureType.ensureNumber)(_feedrate) || 0;
          payload.feedrateOverride = (0, _ensureType.ensureNumber)(_feedrateOverride) || 0;
        }
      } // laser power


      if ((0, _has2["default"])(result, 'L')) {
        var _ensureArray5 = (0, _ensureArray11["default"])(result.L),
            _ensureArray6 = _slicedToArray(_ensureArray5, 1),
            laserPower = _ensureArray6[0];

        payload.laserPower = (0, _ensureType.ensureNumber)(laserPower) || 0;
      } // laser intensity


      if ((0, _has2["default"])(result, 'S')) {
        var _ensureArray7 = (0, _ensureArray11["default"])(result.S),
            _ensureArray8 = _slicedToArray(_ensureArray7, 1),
            laserIntensity = _ensureArray8[0];

        payload.laserIntensity = (0, _ensureType.ensureNumber)(laserIntensity) || 0;
      } // temperature


      if ((0, _has2["default"])(result, 'T')) {
        var _ensureArray9 = (0, _ensureArray11["default"])(result.T),
            _ensureArray10 = _slicedToArray(_ensureArray9, 2),
            currentTemperature = _ensureArray10[0],
            targetTemperature = _ensureArray10[1];

        payload.currentTemperature = (0, _ensureType.ensureNumber)(currentTemperature) || 0;
        payload.targetTemperature = (0, _ensureType.ensureNumber)(targetTemperature) || 0;
      }

      return {
        type: SmoothieLineParserResultStatus,
        payload: payload
      };
    }
  }]);

  return SmoothieLineParserResultStatus;
}();

var _default = SmoothieLineParserResultStatus;
exports["default"] = _default;