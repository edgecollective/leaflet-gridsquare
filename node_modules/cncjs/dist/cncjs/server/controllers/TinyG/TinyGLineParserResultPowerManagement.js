"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _get2 = _interopRequireDefault(require("lodash/get"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// https://github.com/synthetos/TinyG/wiki/Power-Management
var TinyGLineParserResultPowerManagement = /*#__PURE__*/function () {
  function TinyGLineParserResultPowerManagement() {
    _classCallCheck(this, TinyGLineParserResultPowerManagement);
  }

  _createClass(TinyGLineParserResultPowerManagement, null, [{
    key: "parse",
    value: function parse(data) {
      var pwr = (0, _get2["default"])(data, 'r.pwr');

      if (typeof pwr === 'undefined') {
        return null;
      }

      var footer = (0, _get2["default"])(data, 'f') || [];
      var statusCode = footer[1];
      var payload = {};

      if (pwr && statusCode === 0) {
        payload.pwr = pwr;
      }

      return {
        type: TinyGLineParserResultPowerManagement,
        payload: payload
      };
    }
  }]);

  return TinyGLineParserResultPowerManagement;
}();

var _default = TinyGLineParserResultPowerManagement;
exports["default"] = _default;