"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _set2 = _interopRequireDefault(require("lodash/set"));

var _GrblLineParserResultStatus = _interopRequireDefault(require("./GrblLineParserResultStatus"));

var _GrblLineParserResultOk = _interopRequireDefault(require("./GrblLineParserResultOk"));

var _GrblLineParserResultError = _interopRequireDefault(require("./GrblLineParserResultError"));

var _GrblLineParserResultAlarm = _interopRequireDefault(require("./GrblLineParserResultAlarm"));

var _GrblLineParserResultParserState = _interopRequireDefault(require("./GrblLineParserResultParserState"));

var _GrblLineParserResultParameters = _interopRequireDefault(require("./GrblLineParserResultParameters"));

var _GrblLineParserResultHelp = _interopRequireDefault(require("./GrblLineParserResultHelp"));

var _GrblLineParserResultVersion = _interopRequireDefault(require("./GrblLineParserResultVersion"));

var _GrblLineParserResultOption = _interopRequireDefault(require("./GrblLineParserResultOption"));

var _GrblLineParserResultEcho = _interopRequireDefault(require("./GrblLineParserResultEcho"));

var _GrblLineParserResultFeedback = _interopRequireDefault(require("./GrblLineParserResultFeedback"));

var _GrblLineParserResultSettings = _interopRequireDefault(require("./GrblLineParserResultSettings"));

var _GrblLineParserResultStartup = _interopRequireDefault(require("./GrblLineParserResultStartup"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// Grbl v1.1
// https://github.com/gnea/grbl/blob/edge/doc/markdown/interface.md
var GrblLineParser = /*#__PURE__*/function () {
  function GrblLineParser() {
    _classCallCheck(this, GrblLineParser);
  }

  _createClass(GrblLineParser, [{
    key: "parse",
    value: function parse(line) {
      var parsers = [// <>
      _GrblLineParserResultStatus["default"], // ok
      _GrblLineParserResultOk["default"], // error:x
      _GrblLineParserResultError["default"], // ALARM:
      _GrblLineParserResultAlarm["default"], // [G38.2 G54 G17 G21 G91 G94 M0 M5 M9 T0 F20. S0.] (v0.9)
      // [GC:G38.2 G54 G17 G21 G91 G94 M0 M5 M9 T0 F20. S0.] (v1.1)
      _GrblLineParserResultParserState["default"], // [G54:0.000,0.000,0.000]
      // [G55:0.000,0.000,0.000]
      // [G56:0.000,0.000,0.000]
      // [G57:0.000,0.000,0.000]
      // [G58:0.000,0.000,0.000]
      // [G59:0.000,0.000,0.000]
      // [G28:0.000,0.000,0.000]
      // [G30:0.000,0.000,0.000]
      // [G92:0.000,0.000,0.000]
      // [TLO:0.000]
      // [PRB:0.000,0.000,0.000:0]
      _GrblLineParserResultParameters["default"], // [HLP:] (v1.1)
      _GrblLineParserResultHelp["default"], // [VER:] (v1.1)
      _GrblLineParserResultVersion["default"], // [OPT:] (v1.1)
      _GrblLineParserResultOption["default"], // [echo:] (v1.1)
      _GrblLineParserResultEcho["default"], // [] (v0.9)
      // [MSG:] (v1.1)
      _GrblLineParserResultFeedback["default"], // $xx
      _GrblLineParserResultSettings["default"], // Grbl X.Xx ['$' for help]
      _GrblLineParserResultStartup["default"]];

      for (var _i = 0, _parsers = parsers; _i < _parsers.length; _i++) {
        var parser = _parsers[_i];
        var result = parser.parse(line);

        if (result) {
          (0, _set2["default"])(result, 'payload.raw', line);
          return result;
        }
      }

      return {
        type: null,
        payload: {
          raw: line
        }
      };
    }
  }]);

  return GrblLineParser;
}();

var _default = GrblLineParser;
exports["default"] = _default;