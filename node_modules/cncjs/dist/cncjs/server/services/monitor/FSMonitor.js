"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _watch2 = _interopRequireDefault(require("watch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FSMonitor = /*#__PURE__*/function () {
  function FSMonitor() {
    _classCallCheck(this, FSMonitor);

    _defineProperty(this, "root", '');

    _defineProperty(this, "monitor", null);

    _defineProperty(this, "files", {});
  }

  _createClass(FSMonitor, [{
    key: "watch",
    value: function watch(root) {
      var _this = this;

      _watch2["default"].createMonitor(root, function (monitor) {
        _this.unwatch();

        _this.root = root;
        _this.monitor = monitor;
        _this.files = _objectSpread({}, monitor.files);
        monitor.on('created', function (f, stat) {
          _this.files[f] = stat;
        });
        monitor.on('changed', function (f, curr, prev) {
          _this.files[f] = curr;
        });
        monitor.on('removed', function (f, stat) {
          delete _this.files[f];
        });
      });
    }
  }, {
    key: "unwatch",
    value: function unwatch() {
      if (this.monitor) {
        this.monitor.stop(); // Stop watching

        this.monitor = null;
      }

      this.files = {};
    }
  }]);

  return FSMonitor;
}();

var _default = FSMonitor;
exports["default"] = _default;